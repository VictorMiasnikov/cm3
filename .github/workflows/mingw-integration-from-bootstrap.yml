---
name: Mingw integration from bootstrap
# Build and test on Mingw starting from bootstrap release.

on:
  workflow_call:
    inputs:
      os:
        default: windows-latest
        required: false
        type: string
      release:
        default: https://github.com/coder5506/cm3/releases/download/bootstrap-devel
        required: false
        type: string

jobs:
  build:
    runs-on: ${{ inputs.os }}
    timeout-minutes: 35

    strategy:
      fail-fast: false
      matrix:
        include:
        - { target: AMD64_MINGW, bootstrap: cm3-boot-AMD64_NT-d5.11.3.7z, sys: mingw64, env: x86_64 }

    defaults:
      run:
        shell: msys2 {0}

    env:
      CM3_TARGET: ${{ matrix.target }}

    steps:
    - name: Install command-line tools
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.sys }}
        install: >-
          mingw-w64-${{ matrix.env }}-cmake
          mingw-w64-${{ matrix.env }}-ninja
          mingw-w64-${{ matrix.env }}-toolchain
          p7zip
          wget

    - name: Define install location
      run: |
        echo CM3_INSTALL="$(pwd)/../install/cm3" >> $GITHUB_ENV

    - name: Install bootstrap release
      env:
        CMAKE_LIBRARY_PATH: ${{ format('/{0}/{1}-w64-mingw32/lib', matrix.sys, matrix.env) }}
      run: |
        mkdir ../build ../install
        cd ../install
        wget --quiet "${{ inputs.release }}/${{ matrix.bootstrap }}"
        7z x -o.. "${{ matrix.bootstrap }}"
        cmake -S ../bootstrap -B ../build -G Ninja -DCMAKE_INSTALL_PREFIX="${CM3_INSTALL}" -DCMAKE_LIBRARY_PATH="${CMAKE_LIBRARY_PATH}"
        cmake --build ../build
        cmake --install ../build

    - name: Fetch sources
      uses: actions/checkout@v2

    - name: Build all the things
      run: |
        python3 scripts/concierge.py full-upgrade -caltech-other -caltech-parser -m3-scheme
