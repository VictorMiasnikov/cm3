---
name: Windows integration from binary
# Build and test on Windows starting from binary release.

on:
  workflow_call:
    inputs:
      os:
        default: windows-latest
        required: false
        type: string
      target:
        required: true
        type: string
      backend:
        required: true
        type: string

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        backend: ${{ fromJSON(inputs.backend) }}

    runs-on: ${{ inputs.os }}
    timeout-minutes: 30

    defaults:
      run: {shell: cmd}

    env:
      CM3RELEASE: https://github.com/VictorMiasnikov/cm3/releases/download/d15.11.4_5.11.4-ZZYYXX-20211101_22-02_66914fc

    steps:
    - name: Define target parameters (AMD64_NT)
      if: inputs.target == 'AMD64_NT'
      run: |
        echo ARCH=x64>>%GITHUB_ENV%
        echo CM3BUILD=cm3-min-AMD64_NT-d5.11.4-VC142.2019.-2021-11-01_22-02__FIXed__by__VVM__2021-11-03__14-45__16bit__Unicode__AMD64_NT__Target__cm3-66914fc.7z>>%GITHUB_ENV%
      # N.B., no spaces around ">>"

    - name: Define target parameters (I386_NT)
      if: inputs.target == 'I386_NT'
      run: |
        echo ARCH=x86>>%GITHUB_ENV%
        echo CM3BUILD=cm3-min-I386_NT-d5.11.4-VC142.2019.-2021-11-01_22-02__FIXed__by__VVM__2021-11-04__12-05__16bit__Unicode__I386_NT__Target__cm3-66914fc.7z>>%GITHUB_ENV%

    - name: Install command-line tools
      uses: msys2/setup-msys2@v2
      with:
        install: >-
          p7zip
          wget

    - name: Setup SDK environment
      uses: egor-tensin/vs-shell@v2
      with:
        arch: ${{ env.ARCH }}

    - name: Define install location
      run: |
        echo CM3_INSTALL=%CD%\..\build\cm3>>%GITHUB_ENV%

    - name: Install binary release
      run: |
        mkdir -p "${CM3_INSTALL}"
        cd "${CM3_INSTALL}"
        wget "${CM3RELEASE}/${CM3BUILD}"
        p7zip -d "${CM3BUILD}"
      shell: msys2 {0}

    - name: Add release binary to path
      run: |
        echo %CM3_INSTALL%\bin>>%GITHUB_PATH%

    - name: Fetch sources
      uses: actions/checkout@v2

    - name: Build all the things
      env:
        M3_BACKEND_MODE: ${{ (matrix.backend == 'c') && matrix.backend || '' }}
      run: |
        python3 scripts/concierge.py full-upgrade -caltech-other -caltech-parser -m3-scheme %M3_BACKEND_MODE%

    - name: Configure backend mode
      if: matrix.backend == 'c'
      run: |
        sed -e '1ireadonly M3_BACKEND_MODE = "C"' -i "${CM3_INSTALL}/bin/cm3.cfg"
      shell: msys2 {0}

    - name: Run compiler validation suite
      continue-on-error: true
      run: |
        cm3 -DHTML
      working-directory: m3-sys/m3tests
