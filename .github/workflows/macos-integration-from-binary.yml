---
name: MacOS integration from binary
# Build and test on MacOS starting from binary release.

on:
  workflow_call:
    inputs:
      os:
        default: macos-latest
        required: false
        type: string

jobs:
  build-and-test:
    runs-on: ${{ inputs.os }}

    strategy:
      fail-fast: false
      matrix:
        backend: [c, gcc]

    env:
      CM3RELEASE: https://github.com/modula3/cm3/releases/download/d5.11.3/cm3-min-AMD64_DARWIN-d5.11.3-Darwin20.6.0-20211007.tar.gz

    steps:
    - name: Install prerequisites
      run: |
        brew update
        brew install xquartz libxaw libxft

    - name: Define install location
      run: |
        echo CM3INST="$(pwd)/../build/cm3" >> $GITHUB_ENV

    - name: Install binary release
      run: |
        mkdir -p "${CM3INST}"
        curl --location --silent "${CM3RELEASE}" | tar zxf - --directory="${CM3INST}" --strip-components=1

    - name: Add release binary to path
      run: |
        echo "${CM3INST}/bin" >> $GITHUB_PATH

    - name: Fetch sources
      uses: actions/checkout@v2

    - name: Build all the things
      env:
        M3_BACKEND_MODE: ${{ (matrix.backend == 'c') && matrix.backend || '' }}
      run: |
        scripts/concierge.py full-upgrade "${M3_BACKEND_MODE}"

    - name: Configure backend mode
      if: matrix.backend == 'c'
      run: |
        sed -e '1i\
        readonly M3_BACKEND_MODE = "C"
        ' -i '' "${CM3INST}/bin/cm3.cfg"

    - name: Run compiler validation suite
      continue-on-error: true
      run: |
        cm3 -DHTML
      working-directory: m3-sys/m3tests

    - name: Generate test report
      uses: dorny/test-reporter@v1
      with:
        name: ${{ format('m3tests (AMD64_DARWIN, {0})', matrix.backend) }}
        fail-on-error: false
        max-annotations: 49
        path: m3-sys/m3tests/m3tests-results.xml
        reporter: java-junit
