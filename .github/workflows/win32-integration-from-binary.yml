---
name: Win32 integration from binary
# Build and test on Win32 starting from binary release.

on:
  workflow_call:
    inputs:
      os:
        default: windows-latest
        required: false
        type: string

jobs:
  build-and-test:
    runs-on: ${{ inputs.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
        - {target: AMD64_NT, backend: c}
        - {target: AMD64_NT, backend: integrated}
        - {target: I386_NT,  backend: c}
        - {target: I386_NT,  backend: integrated}

    defaults:
      run: {shell: cmd}

    env:
      CM3RELEASE: https://github.com/VictorMiasnikov/cm3/releases/download/d5.11.3_8a842be

    steps:
    - name: Define target parameters (AMD64_NT)
      if: matrix.target == 'AMD64_NT'
      run: |
        echo ARCH=x64>>%GITHUB_ENV%
        echo CM3BUILD=cm3-min-AMD64_NT-d5.11.3-VC142.2019.-2021-07-20_07-26.FIXed.by.VVM.2021-08-02.13-05.non.Unicode.AMD64_NT.Target.cm3-8a842be10f0e5d1f1acf73597d13765aea305573.7z>>%GITHUB_ENV%
      # N.B., no spaces around ">>"

    - name: Define target parameters (I386_NT)
      if: matrix.target == 'I386_NT'
      run: |
        echo ARCH=x86>>%GITHUB_ENV%
        echo CM3BUILD=cm3-min-I386_NT-d5.11.3-VC142.2019.-2021-07-20_07-26.FIXed.by.VVM.20210804_16-20.non.Unicode.I386_NT.Target.cm3-8a842be10f0e5d1f1acf73597d13765aea305573.7z>>%GITHUB_ENV%

    - name: Install command-line tools
      uses: msys2/setup-msys2@v2
      with:
        install: >-
          p7zip
          wget

    - name: Setup SDK environment
      uses: egor-tensin/vs-shell@v2
      with:
        arch: ${{ env.ARCH }}

    - name: Define install location
      run: |
        echo CM3INST=%CD%\..\build>>%GITHUB_ENV%

    - name: Install binary release
      run: |
        mkdir -p "${CM3INST}"
        cd "${CM3INST}"
        wget "${CM3RELEASE}/${CM3BUILD}"
        p7zip -d "${CM3BUILD}"
      shell: msys2 {0}

    - name: Add release binary to path
      run: |
        echo %CM3INST%\cm3\bin>>%GITHUB_PATH%

    - name: Fetch sources
      uses: actions/checkout@v2

    - name: Build all the things
      env:
        M3_BACKEND_MODE: ${{ (matrix.backend == 'c') && matrix.backend || '' }}
      run: |
        python3 scripts/concierge.py full-upgrade -caltech-other -caltech-parser -m3-scheme "${M3_BACKEND_MODE}"
