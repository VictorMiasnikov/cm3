//Commented out list of ignores for all exported methods. 
//Generated via swig -modula3 -generateignores -c++ M3DIBuilder.i
//Useful in development where you ignore everything except 
//the method you are working on and want to cut the error list down.

/*
%ignore LLVMInitializeCore;
%ignore LLVMShutdown;
%ignore LLVMCreateMessage;
%ignore LLVMDisposeMessage;
%ignore LLVMContextCreate;
%ignore LLVMGetGlobalContext;
%ignore LLVMContextSetDiagnosticHandler;
%ignore LLVMContextGetDiagnosticHandler;
%ignore LLVMContextGetDiagnosticContext;
%ignore LLVMContextSetYieldCallback;
%ignore LLVMContextShouldDiscardValueNames;
%ignore LLVMContextSetDiscardValueNames;
%ignore LLVMContextDispose;
%ignore LLVMGetDiagInfoDescription;
%ignore LLVMGetDiagInfoSeverity;
%ignore LLVMGetMDKindIDInContext;
%ignore LLVMGetMDKindID;
%ignore LLVMGetEnumAttributeKindForName;
%ignore LLVMGetLastEnumAttributeKind;
%ignore LLVMCreateEnumAttribute;
%ignore LLVMGetEnumAttributeKind;
%ignore LLVMGetEnumAttributeValue;
%ignore LLVMCreateStringAttribute;
%ignore LLVMGetStringAttributeKind;
%ignore LLVMGetStringAttributeValue;
%ignore LLVMIsEnumAttribute;
%ignore LLVMIsStringAttribute;
%ignore LLVMModuleCreateWithName;
%ignore LLVMModuleCreateWithNameInContext;
%ignore LLVMCloneModule;
%ignore LLVMDisposeModule;
%ignore LLVMGetModuleIdentifier;
%ignore LLVMSetModuleIdentifier;
%ignore LLVMGetSourceFileName;
%ignore LLVMSetSourceFileName;
%ignore LLVMGetDataLayoutStr;
%ignore LLVMGetDataLayout;
%ignore LLVMSetDataLayout;
%ignore LLVMGetTarget;
%ignore LLVMSetTarget;
%ignore LLVMCopyModuleFlagsMetadata;
%ignore LLVMDisposeModuleFlagsMetadata;
%ignore LLVMModuleFlagEntriesGetFlagBehavior;
%ignore LLVMModuleFlagEntriesGetKey;
%ignore LLVMModuleFlagEntriesGetMetadata;
%ignore LLVMGetModuleFlag;
%ignore LLVMAddModuleFlag;
%ignore LLVMDumpModule;
%ignore LLVMPrintModuleToFile;
%ignore LLVMPrintModuleToString;
%ignore LLVMGetModuleInlineAsm;
%ignore LLVMSetModuleInlineAsm2;
%ignore LLVMAppendModuleInlineAsm;
%ignore LLVMGetInlineAsm;
%ignore LLVMGetModuleContext;
%ignore LLVMGetTypeByName;
%ignore LLVMGetFirstNamedMetadata;
%ignore LLVMGetLastNamedMetadata;
%ignore LLVMGetNextNamedMetadata;
%ignore LLVMGetPreviousNamedMetadata;
%ignore LLVMGetNamedMetadata;
%ignore LLVMGetOrInsertNamedMetadata;
%ignore LLVMGetNamedMetadataName;
%ignore LLVMGetNamedMetadataNumOperands;

//this one is an array but we return a pointer so have to 
//cast on return - a better type would be dyanamic array
%ignore LLVMGetNamedMetadataOperands;

%ignore LLVMAddNamedMetadataOperand;
%ignore LLVMGetDebugLocDirectory;
%ignore LLVMGetDebugLocFilename;
%ignore LLVMGetDebugLocLine;
%ignore LLVMGetDebugLocColumn;
%ignore LLVMAddFunction;
%ignore LLVMGetNamedFunction;
%ignore LLVMGetFirstFunction;
%ignore LLVMGetLastFunction;
%ignore LLVMGetNextFunction;
%ignore LLVMGetPreviousFunction;
%ignore LLVMSetModuleInlineAsm;
%ignore LLVMGetTypeKind;
%ignore LLVMTypeIsSized;
%ignore LLVMGetTypeContext;
%ignore LLVMDumpType;
%ignore LLVMPrintTypeToString;
%ignore LLVMInt1TypeInContext;
%ignore LLVMInt8TypeInContext;
%ignore LLVMInt16TypeInContext;
%ignore LLVMInt32TypeInContext;
%ignore LLVMInt64TypeInContext;
%ignore LLVMInt128TypeInContext;
%ignore LLVMIntTypeInContext;
%ignore LLVMInt1Type;
%ignore LLVMInt8Type;
%ignore LLVMInt16Type;
%ignore LLVMInt32Type;
%ignore LLVMInt64Type;
%ignore LLVMInt128Type;
%ignore LLVMIntType;
%ignore LLVMGetIntTypeWidth;
%ignore LLVMHalfTypeInContext;
%ignore LLVMFloatTypeInContext;
%ignore LLVMDoubleTypeInContext;
%ignore LLVMX86FP80TypeInContext;
%ignore LLVMFP128TypeInContext;
%ignore LLVMPPCFP128TypeInContext;
%ignore LLVMHalfType;
%ignore LLVMFloatType;
%ignore LLVMDoubleType;
%ignore LLVMX86FP80Type;
%ignore LLVMFP128Type;
%ignore LLVMPPCFP128Type;
%ignore LLVMFunctionType;
%ignore LLVMIsFunctionVarArg;
%ignore LLVMGetReturnType;
%ignore LLVMCountParamTypes;
%ignore LLVMGetParamTypes;
%ignore LLVMStructTypeInContext;
%ignore LLVMStructType;
%ignore LLVMStructCreateNamed;
%ignore LLVMGetStructName;
%ignore LLVMStructSetBody;
%ignore LLVMCountStructElementTypes;
%ignore LLVMGetStructElementTypes;
%ignore LLVMStructGetTypeAtIndex;
%ignore LLVMIsPackedStruct;
%ignore LLVMIsOpaqueStruct;
%ignore LLVMIsLiteralStruct;
%ignore LLVMGetElementType;
%ignore LLVMGetSubtypes;
%ignore LLVMGetNumContainedTypes;
%ignore LLVMArrayType;
%ignore LLVMGetArrayLength;
%ignore LLVMPointerType;
%ignore LLVMGetPointerAddressSpace;
%ignore LLVMVectorType;
%ignore LLVMGetVectorSize;
%ignore LLVMVoidTypeInContext;
%ignore LLVMLabelTypeInContext;
%ignore LLVMX86MMXTypeInContext;
%ignore LLVMTokenTypeInContext;
%ignore LLVMMetadataTypeInContext;
%ignore LLVMVoidType;
%ignore LLVMLabelType;
%ignore LLVMX86MMXType;
%ignore LLVMTypeOf;
%ignore LLVMGetValueKind;
%ignore LLVMGetValueName2;
%ignore LLVMSetValueName2;
%ignore LLVMDumpValue;
%ignore LLVMPrintValueToString;
%ignore LLVMReplaceAllUsesWith;
%ignore LLVMIsConstant;
%ignore LLVMIsUndef;
%ignore LLVMIsAArgument;
%ignore LLVMIsABasicBlock;
%ignore LLVMIsAInlineAsm;
%ignore LLVMIsAUser;
%ignore LLVMIsAConstant;
%ignore LLVMIsABlockAddress;
%ignore LLVMIsAConstantAggregateZero;
%ignore LLVMIsAConstantArray;
%ignore LLVMIsAConstantDataSequential;
%ignore LLVMIsAConstantDataArray;
%ignore LLVMIsAConstantDataVector;
%ignore LLVMIsAConstantExpr;
%ignore LLVMIsAConstantFP;
%ignore LLVMIsAConstantInt;
%ignore LLVMIsAConstantPointerNull;
%ignore LLVMIsAConstantStruct;
%ignore LLVMIsAConstantTokenNone;
%ignore LLVMIsAConstantVector;
%ignore LLVMIsAGlobalValue;
%ignore LLVMIsAGlobalAlias;
%ignore LLVMIsAGlobalIFunc;
%ignore LLVMIsAGlobalObject;
%ignore LLVMIsAFunction;
%ignore LLVMIsAGlobalVariable;
%ignore LLVMIsAUndefValue;
%ignore LLVMIsAInstruction;
%ignore LLVMIsABinaryOperator;
%ignore LLVMIsACallInst;
%ignore LLVMIsAIntrinsicInst;
%ignore LLVMIsADbgInfoIntrinsic;
%ignore LLVMIsADbgVariableIntrinsic;
%ignore LLVMIsADbgDeclareInst;
%ignore LLVMIsADbgLabelInst;
%ignore LLVMIsAMemIntrinsic;
%ignore LLVMIsAMemCpyInst;
%ignore LLVMIsAMemMoveInst;
%ignore LLVMIsAMemSetInst;
%ignore LLVMIsACmpInst;
%ignore LLVMIsAFCmpInst;
%ignore LLVMIsAICmpInst;
%ignore LLVMIsAExtractElementInst;
%ignore LLVMIsAGetElementPtrInst;
%ignore LLVMIsAInsertElementInst;
%ignore LLVMIsAInsertValueInst;
%ignore LLVMIsALandingPadInst;
%ignore LLVMIsAPHINode;
%ignore LLVMIsASelectInst;
%ignore LLVMIsAShuffleVectorInst;
%ignore LLVMIsAStoreInst;
%ignore LLVMIsABranchInst;
%ignore LLVMIsAIndirectBrInst;
%ignore LLVMIsAInvokeInst;
%ignore LLVMIsAReturnInst;
%ignore LLVMIsASwitchInst;
%ignore LLVMIsAUnreachableInst;
%ignore LLVMIsAResumeInst;
%ignore LLVMIsACleanupReturnInst;
%ignore LLVMIsACatchReturnInst;
%ignore LLVMIsAFuncletPadInst;
%ignore LLVMIsACatchPadInst;
%ignore LLVMIsACleanupPadInst;
%ignore LLVMIsAUnaryInstruction;
%ignore LLVMIsAAllocaInst;
%ignore LLVMIsACastInst;
%ignore LLVMIsAAddrSpaceCastInst;
%ignore LLVMIsABitCastInst;
%ignore LLVMIsAFPExtInst;
%ignore LLVMIsAFPToSIInst;
%ignore LLVMIsAFPToUIInst;
%ignore LLVMIsAFPTruncInst;
%ignore LLVMIsAIntToPtrInst;
%ignore LLVMIsAPtrToIntInst;
%ignore LLVMIsASExtInst;
%ignore LLVMIsASIToFPInst;
%ignore LLVMIsATruncInst;
%ignore LLVMIsAUIToFPInst;
%ignore LLVMIsAZExtInst;
%ignore LLVMIsAExtractValueInst;
%ignore LLVMIsALoadInst;
%ignore LLVMIsAVAArgInst;
%ignore LLVMIsAMDNode;
%ignore LLVMIsAMDString;
%ignore LLVMGetValueName;
%ignore LLVMSetValueName;
%ignore LLVMGetFirstUse;
%ignore LLVMGetNextUse;
%ignore LLVMGetUser;
%ignore LLVMGetUsedValue;
%ignore LLVMGetOperand;
%ignore LLVMGetOperandUse;
%ignore LLVMSetOperand;
%ignore LLVMGetNumOperands;
%ignore LLVMConstNull;
%ignore LLVMConstAllOnes;
%ignore LLVMGetUndef;
%ignore LLVMIsNull;
%ignore LLVMConstPointerNull;
%ignore LLVMConstInt;

//check words[] correctly passes array 
%ignore LLVMConstIntOfArbitraryPrecision;

%ignore LLVMConstIntOfString;
%ignore LLVMConstIntOfStringAndSize;
%ignore LLVMConstReal;
%ignore LLVMConstRealOfString;
%ignore LLVMConstRealOfStringAndSize;
%ignore LLVMConstIntGetZExtValue;
%ignore LLVMConstIntGetSExtValue;
%ignore LLVMConstRealGetDouble;
%ignore LLVMConstStringInContext;
%ignore LLVMConstString;
%ignore LLVMIsConstantString;
%ignore LLVMGetAsString;
%ignore LLVMConstStructInContext;
%ignore LLVMConstStruct;
%ignore LLVMConstArray;
%ignore LLVMConstNamedStruct;
%ignore LLVMGetElementAsConstant;
%ignore LLVMConstVector;
%ignore LLVMGetConstOpcode;
%ignore LLVMAlignOf;
%ignore LLVMSizeOf;
%ignore LLVMConstNeg;
%ignore LLVMConstNSWNeg;
%ignore LLVMConstNUWNeg;
%ignore LLVMConstFNeg;
%ignore LLVMConstNot;
%ignore LLVMConstAdd;
%ignore LLVMConstNSWAdd;
%ignore LLVMConstNUWAdd;
%ignore LLVMConstFAdd;
%ignore LLVMConstSub;
%ignore LLVMConstNSWSub;
%ignore LLVMConstNUWSub;
%ignore LLVMConstFSub;
%ignore LLVMConstMul;
%ignore LLVMConstNSWMul;
%ignore LLVMConstNUWMul;
%ignore LLVMConstFMul;
%ignore LLVMConstUDiv;
%ignore LLVMConstExactUDiv;
%ignore LLVMConstSDiv;
%ignore LLVMConstExactSDiv;
%ignore LLVMConstFDiv;
%ignore LLVMConstURem;
%ignore LLVMConstSRem;
%ignore LLVMConstFRem;
%ignore LLVMConstAnd;
%ignore LLVMConstOr;
%ignore LLVMConstXor;
%ignore LLVMConstICmp;
%ignore LLVMConstFCmp;
%ignore LLVMConstShl;
%ignore LLVMConstLShr;
%ignore LLVMConstAShr;
%ignore LLVMConstGEP;
%ignore LLVMConstGEP2;
%ignore LLVMConstInBoundsGEP;
%ignore LLVMConstInBoundsGEP2;
%ignore LLVMConstTrunc;
%ignore LLVMConstSExt;
%ignore LLVMConstZExt;
%ignore LLVMConstFPTrunc;
%ignore LLVMConstFPExt;
%ignore LLVMConstUIToFP;
%ignore LLVMConstSIToFP;
%ignore LLVMConstFPToUI;
%ignore LLVMConstFPToSI;
%ignore LLVMConstPtrToInt;
%ignore LLVMConstIntToPtr;
%ignore LLVMConstBitCast;
%ignore LLVMConstAddrSpaceCast;
%ignore LLVMConstZExtOrBitCast;
%ignore LLVMConstSExtOrBitCast;
%ignore LLVMConstTruncOrBitCast;
%ignore LLVMConstPointerCast;
%ignore LLVMConstIntCast;
%ignore LLVMConstFPCast;
%ignore LLVMConstSelect;
%ignore LLVMConstExtractElement;
%ignore LLVMConstInsertElement;
%ignore LLVMConstShuffleVector;
%ignore LLVMConstExtractValue;
%ignore LLVMConstInsertValue;
%ignore LLVMBlockAddress;
%ignore LLVMConstInlineAsm;
%ignore LLVMGetGlobalParent;
%ignore LLVMIsDeclaration;
%ignore LLVMGetLinkage;
%ignore LLVMSetLinkage;
%ignore LLVMGetSection;
%ignore LLVMSetSection;
%ignore LLVMGetVisibility;
%ignore LLVMSetVisibility;
%ignore LLVMGetDLLStorageClass;
%ignore LLVMSetDLLStorageClass;
%ignore LLVMGetUnnamedAddress;
%ignore LLVMSetUnnamedAddress;
%ignore LLVMGlobalGetValueType;
%ignore LLVMHasUnnamedAddr;
%ignore LLVMSetUnnamedAddr;
%ignore LLVMGetAlignment;
%ignore LLVMSetAlignment;
%ignore LLVMGlobalSetMetadata;
%ignore LLVMGlobalEraseMetadata;
%ignore LLVMGlobalClearMetadata;
%ignore LLVMGlobalCopyAllMetadata;
%ignore LLVMDisposeValueMetadataEntries;
%ignore LLVMValueMetadataEntriesGetKind;
%ignore LLVMValueMetadataEntriesGetMetadata;
%ignore LLVMAddGlobal;
%ignore LLVMAddGlobalInAddressSpace;
%ignore LLVMGetNamedGlobal;
%ignore LLVMGetFirstGlobal;
%ignore LLVMGetLastGlobal;
%ignore LLVMGetNextGlobal;
%ignore LLVMGetPreviousGlobal;
%ignore LLVMDeleteGlobal;
%ignore LLVMGetInitializer;
%ignore LLVMSetInitializer;
%ignore LLVMIsThreadLocal;
%ignore LLVMSetThreadLocal;
%ignore LLVMIsGlobalConstant;
%ignore LLVMSetGlobalConstant;
%ignore LLVMGetThreadLocalMode;
%ignore LLVMSetThreadLocalMode;
%ignore LLVMIsExternallyInitialized;
%ignore LLVMSetExternallyInitialized;
%ignore LLVMAddAlias;
%ignore LLVMGetNamedGlobalAlias;
%ignore LLVMGetFirstGlobalAlias;
%ignore LLVMGetLastGlobalAlias;
%ignore LLVMGetNextGlobalAlias;
%ignore LLVMGetPreviousGlobalAlias;
%ignore LLVMAliasGetAliasee;
%ignore LLVMAliasSetAliasee;
%ignore LLVMDeleteFunction;
%ignore LLVMHasPersonalityFn;
%ignore LLVMGetPersonalityFn;
%ignore LLVMSetPersonalityFn;
%ignore LLVMGetIntrinsicID;
%ignore LLVMGetIntrinsicDeclaration;
%ignore LLVMIntrinsicGetType;
%ignore LLVMIntrinsicGetName;
%ignore LLVMIntrinsicCopyOverloadedName;
%ignore LLVMIntrinsicIsOverloaded;
%ignore LLVMGetFunctionCallConv;
%ignore LLVMSetFunctionCallConv;
%ignore LLVMGetGC;
%ignore LLVMSetGC;
%ignore LLVMAddAttributeAtIndex;
%ignore LLVMGetAttributeCountAtIndex;
%ignore LLVMGetAttributesAtIndex;
%ignore LLVMGetEnumAttributeAtIndex;
%ignore LLVMGetStringAttributeAtIndex;
%ignore LLVMRemoveEnumAttributeAtIndex;
%ignore LLVMRemoveStringAttributeAtIndex;
%ignore LLVMAddTargetDependentFunctionAttr;
%ignore LLVMCountParams;
%ignore LLVMGetParams;
%ignore LLVMGetParam;
%ignore LLVMGetParamParent;
%ignore LLVMGetFirstParam;
%ignore LLVMGetLastParam;
%ignore LLVMGetNextParam;
%ignore LLVMGetPreviousParam;
%ignore LLVMSetParamAlignment;
%ignore LLVMMDStringInContext;
%ignore LLVMMDString;
%ignore LLVMMDNodeInContext;
%ignore LLVMMDNode;
%ignore LLVMMetadataAsValue;
%ignore LLVMValueAsMetadata;
%ignore LLVMGetMDString;
%ignore LLVMGetMDNodeNumOperands;
%ignore LLVMGetMDNodeOperands;
%ignore LLVMBasicBlockAsValue;
%ignore LLVMValueIsBasicBlock;
%ignore LLVMValueAsBasicBlock;
%ignore LLVMGetBasicBlockName;
%ignore LLVMGetBasicBlockParent;
%ignore LLVMGetBasicBlockTerminator;
%ignore LLVMCountBasicBlocks;
%ignore LLVMGetBasicBlocks;
%ignore LLVMGetFirstBasicBlock;
%ignore LLVMGetLastBasicBlock;
%ignore LLVMGetNextBasicBlock;
%ignore LLVMGetPreviousBasicBlock;
%ignore LLVMGetEntryBasicBlock;
%ignore LLVMCreateBasicBlockInContext;
%ignore LLVMAppendBasicBlockInContext;
%ignore LLVMAppendBasicBlock;
%ignore LLVMInsertBasicBlockInContext;
%ignore LLVMInsertBasicBlock;
%ignore LLVMDeleteBasicBlock;
%ignore LLVMRemoveBasicBlockFromParent;
%ignore LLVMMoveBasicBlockBefore;
%ignore LLVMMoveBasicBlockAfter;
%ignore LLVMGetFirstInstruction;
%ignore LLVMGetLastInstruction;
%ignore LLVMHasMetadata;
%ignore LLVMGetMetadata;
%ignore LLVMSetMetadata;
%ignore LLVMInstructionGetAllMetadataOtherThanDebugLoc;
%ignore LLVMGetInstructionParent;
%ignore LLVMGetNextInstruction;
%ignore LLVMGetPreviousInstruction;
%ignore LLVMInstructionRemoveFromParent;
%ignore LLVMInstructionEraseFromParent;
%ignore LLVMGetInstructionOpcode;
%ignore LLVMGetICmpPredicate;
%ignore LLVMGetFCmpPredicate;
%ignore LLVMInstructionClone;
%ignore LLVMIsATerminatorInst;
%ignore LLVMGetNumArgOperands;
%ignore LLVMSetInstructionCallConv;
%ignore LLVMGetInstructionCallConv;
%ignore LLVMSetInstrParamAlignment;
%ignore LLVMAddCallSiteAttribute;
%ignore LLVMGetCallSiteAttributeCount;
%ignore LLVMGetCallSiteAttributes;
%ignore LLVMGetCallSiteEnumAttribute;
%ignore LLVMGetCallSiteStringAttribute;
%ignore LLVMRemoveCallSiteEnumAttribute;
%ignore LLVMRemoveCallSiteStringAttribute;
%ignore LLVMGetCalledFunctionType;
%ignore LLVMGetCalledValue;
%ignore LLVMIsTailCall;
%ignore LLVMSetTailCall;
%ignore LLVMGetNormalDest;
%ignore LLVMGetUnwindDest;
%ignore LLVMSetNormalDest;
%ignore LLVMSetUnwindDest;
%ignore LLVMGetNumSuccessors;
%ignore LLVMGetSuccessor;
%ignore LLVMSetSuccessor;
%ignore LLVMIsConditional;
%ignore LLVMGetCondition;
%ignore LLVMSetCondition;
%ignore LLVMGetSwitchDefaultDest;
%ignore LLVMGetAllocatedType;
%ignore LLVMIsInBounds;
%ignore LLVMSetIsInBounds;
%ignore LLVMAddIncoming;
%ignore LLVMCountIncoming;
%ignore LLVMGetIncomingValue;
%ignore LLVMGetIncomingBlock;
%ignore LLVMGetNumIndices;
%ignore LLVMGetIndices;
%ignore LLVMCreateBuilderInContext;
%ignore LLVMCreateBuilder;
%ignore LLVMPositionBuilder;
%ignore LLVMPositionBuilderBefore;
%ignore LLVMPositionBuilderAtEnd;
%ignore LLVMGetInsertBlock;
%ignore LLVMClearInsertionPosition;
%ignore LLVMInsertIntoBuilder;
%ignore LLVMInsertIntoBuilderWithName;
%ignore LLVMDisposeBuilder;
%ignore LLVMSetCurrentDebugLocation;
%ignore LLVMGetCurrentDebugLocation;
%ignore LLVMSetInstDebugLocation;
%ignore LLVMBuildRetVoid;
%ignore LLVMBuildRet;
%ignore LLVMBuildAggregateRet;
%ignore LLVMBuildBr;
%ignore LLVMBuildCondBr;
%ignore LLVMBuildSwitch;
%ignore LLVMBuildIndirectBr;
%ignore LLVMBuildInvoke;
%ignore LLVMBuildInvoke2;
%ignore LLVMBuildUnreachable;
%ignore LLVMBuildResume;
%ignore LLVMBuildLandingPad;
%ignore LLVMBuildCleanupRet;
%ignore LLVMBuildCatchRet;
%ignore LLVMBuildCatchPad;
%ignore LLVMBuildCleanupPad;
%ignore LLVMBuildCatchSwitch;
%ignore LLVMAddCase;
%ignore LLVMAddDestination;
%ignore LLVMGetNumClauses;
%ignore LLVMGetClause;
%ignore LLVMAddClause;
%ignore LLVMIsCleanup;
%ignore LLVMSetCleanup;
%ignore LLVMAddHandler;
%ignore LLVMGetNumHandlers;
%ignore LLVMGetHandlers;
%ignore LLVMGetArgOperand;
%ignore LLVMSetArgOperand;
%ignore LLVMGetParentCatchSwitch;
%ignore LLVMSetParentCatchSwitch;
%ignore LLVMBuildAdd;
%ignore LLVMBuildNSWAdd;
%ignore LLVMBuildNUWAdd;
%ignore LLVMBuildFAdd;
%ignore LLVMBuildSub;
%ignore LLVMBuildNSWSub;
%ignore LLVMBuildNUWSub;
%ignore LLVMBuildFSub;
%ignore LLVMBuildMul;
%ignore LLVMBuildNSWMul;
%ignore LLVMBuildNUWMul;
%ignore LLVMBuildFMul;
%ignore LLVMBuildUDiv;
%ignore LLVMBuildExactUDiv;
%ignore LLVMBuildSDiv;
%ignore LLVMBuildExactSDiv;
%ignore LLVMBuildFDiv;
%ignore LLVMBuildURem;
%ignore LLVMBuildSRem;
%ignore LLVMBuildFRem;
%ignore LLVMBuildShl;
%ignore LLVMBuildLShr;
%ignore LLVMBuildAShr;
%ignore LLVMBuildAnd;
%ignore LLVMBuildOr;
%ignore LLVMBuildXor;
%ignore LLVMBuildBinOp;
%ignore LLVMBuildNeg;
%ignore LLVMBuildNSWNeg;
%ignore LLVMBuildNUWNeg;
%ignore LLVMBuildFNeg;
%ignore LLVMBuildNot;
%ignore LLVMBuildMalloc;
%ignore LLVMBuildArrayMalloc;
%ignore LLVMBuildMemSet;
%ignore LLVMBuildMemCpy;
%ignore LLVMBuildMemMove;
%ignore LLVMBuildAlloca;
%ignore LLVMBuildArrayAlloca;
%ignore LLVMBuildFree;
%ignore LLVMBuildLoad;
%ignore LLVMBuildLoad2;
%ignore LLVMBuildStore;
%ignore LLVMBuildGEP;
%ignore LLVMBuildInBoundsGEP;
%ignore LLVMBuildStructGEP;
%ignore LLVMBuildGEP2;
%ignore LLVMBuildInBoundsGEP2;
%ignore LLVMBuildStructGEP2;
%ignore LLVMBuildGlobalString;
%ignore LLVMBuildGlobalStringPtr;
%ignore LLVMGetVolatile;
%ignore LLVMSetVolatile;
%ignore LLVMGetOrdering;
%ignore LLVMSetOrdering;
%ignore LLVMBuildTrunc;
%ignore LLVMBuildZExt;
%ignore LLVMBuildSExt;
%ignore LLVMBuildFPToUI;
%ignore LLVMBuildFPToSI;
%ignore LLVMBuildUIToFP;
%ignore LLVMBuildSIToFP;
%ignore LLVMBuildFPTrunc;
%ignore LLVMBuildFPExt;
%ignore LLVMBuildPtrToInt;
%ignore LLVMBuildIntToPtr;
%ignore LLVMBuildBitCast;
%ignore LLVMBuildAddrSpaceCast;
%ignore LLVMBuildZExtOrBitCast;
%ignore LLVMBuildSExtOrBitCast;
%ignore LLVMBuildTruncOrBitCast;
%ignore LLVMBuildCast;
%ignore LLVMBuildPointerCast;
%ignore LLVMBuildIntCast2;
%ignore LLVMBuildFPCast;
%ignore LLVMBuildIntCast;
%ignore LLVMBuildICmp;
%ignore LLVMBuildFCmp;
%ignore LLVMBuildPhi;
%ignore LLVMBuildCall;
%ignore LLVMBuildCall2;
%ignore LLVMBuildSelect;
%ignore LLVMBuildVAArg;
%ignore LLVMBuildExtractElement;
%ignore LLVMBuildInsertElement;
%ignore LLVMBuildShuffleVector;
%ignore LLVMBuildExtractValue;
%ignore LLVMBuildInsertValue;
%ignore LLVMBuildIsNull;
%ignore LLVMBuildIsNotNull;
%ignore LLVMBuildPtrDiff;
%ignore LLVMBuildFence;
%ignore LLVMBuildAtomicRMW;
%ignore LLVMBuildAtomicCmpXchg;
%ignore LLVMIsAtomicSingleThread;
%ignore LLVMSetAtomicSingleThread;
%ignore LLVMGetCmpXchgSuccessOrdering;
%ignore LLVMSetCmpXchgSuccessOrdering;
%ignore LLVMGetCmpXchgFailureOrdering;
%ignore LLVMSetCmpXchgFailureOrdering;
%ignore LLVMCreateModuleProviderForExistingModule;
%ignore LLVMDisposeModuleProvider;
%ignore LLVMCreateMemoryBufferWithContentsOfFile;
%ignore LLVMCreateMemoryBufferWithSTDIN;
%ignore LLVMCreateMemoryBufferWithMemoryRange;
%ignore LLVMCreateMemoryBufferWithMemoryRangeCopy;
%ignore LLVMGetBufferStart;
%ignore LLVMGetBufferSize;
%ignore LLVMDisposeMemoryBuffer;
%ignore LLVMGetGlobalPassRegistry;
%ignore LLVMCreatePassManager;
%ignore LLVMCreateFunctionPassManagerForModule;
%ignore LLVMCreateFunctionPassManager;
%ignore LLVMRunPassManager;
%ignore LLVMInitializeFunctionPassManager;
%ignore LLVMRunFunctionPassManager;
%ignore LLVMFinalizeFunctionPassManager;
%ignore LLVMDisposePassManager;
%ignore LLVMStartMultithreaded;
%ignore LLVMStopMultithreaded;
%ignore LLVMIsMultithreaded;
*/
