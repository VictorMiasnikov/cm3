-----------------------------------------------------------------------------
fix O1/O2/O3
 at least for I386_LINUX
 test others
-----------------------------------------------------------------------------
setup AMD64_OPENBSD / AMD64_NETBSD Hudson nodes
-----------------------------------------------------------------------------
look into the token pasting of M3WRAP
  see if it can work without expanding the NetBSD defines
-----------------------------------------------------------------------------
64bit time support
-----------------------------------------------------------------------------
test p247 hits assertion failure for SPARC64_SOLARIS
  see if can reproduce with similar C
  This should be fixed by better type information,
  in particular record parameters need to be such
  should get their fields right too
Fixed
-----------------------------------------------------------------------------
switch all targets to MAIN_IN_C
  This fixes some things and no real downside?
done in the config files
-----------------------------------------------------------------------------
go through test p240 exact codegen diffs 4.3.5 to 4.5.1
  esp. the missing .hidden on Darwin
-----------------------------------------------------------------------------
figure out the problem with SPARC32_LINUX PIC
 also SOLgnu, SOLsun
 try 4.3.0?
-----------------------------------------------------------------------------
restore optimization on Alpha/OSF (with gcc 4.5.x)
-----------------------------------------------------------------------------
reduce volatile in backend (SPARC32_SOLARIS)
-----------------------------------------------------------------------------
allow all backend optimizations
-----------------------------------------------------------------------------
fill in atomic more:
  ARMEL_LINUX: everything
  PPC_LINUX, PPC_DARWIN, PPC32_OPENBSD, SPARC32_LINUX: Longint
  MIPS64_OPENBSD, MIPS64EL_OPENBSD: Boolean, Char, WideChar
-----------------------------------------------------------------------------
new distribution format, kind of like 3.6:
  cm3-min-version-target.tar.gz
  cm3-all-version-target.tar.gz
    contains assembly
    C
    Makefile (maybe using automake + libtool)
    maybe configure script
    Users will configure, make, make install.
    Runtime paths will be hard coded. And flattend.
  cm3-src-version.tar.gz
    Modula-3 source to entire system.
  cm3-m3cc-version.tar.gz
    m3cc source
  cm3-m3gdb-version.tar.gz
    m3gdb source
-----------------------------------------------------------------------------
reliable stack dumps for assertion failures
-----------------------------------------------------------------------------
fix tree to build new_adr
and then enable new_adr
-----------------------------------------------------------------------------
move to gcc 4.5.x as backend
  main known obstacle is closure support
    closure support seems to work
  failures on many targets though e.g. I386_DARWIN
  in progress and partly done, several targets moved

and/or upgrade gcc 4.3.0 to gcc 4.3.x
  done
-----------------------------------------------------------------------------
upgrade m3gdb to newer version
and/or produce enough type information in backend
to make gdb much better and m3gdb moot
-----------------------------------------------------------------------------
write a C or C++ generating backend
C++ is useful for possibly more portable optimized exception handling.
That is, given a C++ compiler that implements exception handling,
which is all these days, and most through time, but not all through time,
there is some good chance the exception handling is more efficient
than setjmp/longjmp

and/or use gcc's exception handling support via cm3cg

A C generating backend could mean a successful end to nearly all porting
work. The remainder would just be the #ifdefs in C, possibly autoconfed.
-----------------------------------------------------------------------------
Enable the entire tree to cross build, including 32<=>64bit.
Main known problem is some array size issues, declaring
an array with over 2 billion elements targeting 64bit from 32bit host

Enable the entire tree to cross build, including the various
text munging, file copying, etc. link and ship all the packages
on the target machine.
-----------------------------------------------------------------------------
test Win32 LONGINT
-----------------------------------------------------------------------------
test Win32 atomics
-----------------------------------------------------------------------------
make Win32 set_member, set_singleton not be interlocked
-----------------------------------------------------------------------------
Optimize Win32 atomics.
  In particular, they don't all have to be interlocked compare exchange loops
-----------------------------------------------------------------------------
update compiler to know about "configure_system_libs"

Specifically, import_sys_lib or such in .M3SHIP should be preceded
by if defined("configure_system_libs") configure_system_libs() end

See Solaris.common.
Also affects PPC64_DARWIN

In particular, Solaris/x86 pre-2.10 lacks OpenGL.
-----------------------------------------------------------------------------
Encode OS version in archive names, at least for Solaris/x86
  done?
-----------------------------------------------------------------------------
Support more platforms.
In particular:
  NT: amd64, ia64
  Interix: amd64, ia64
  Linux: mips, sh, ia64, ppc64, etc.
  Darwin: ppc64 (just has one known bug)
  IRIX: mip32, mips64
  VMS: alpha32, alpha64, ia64
  OpenBSD: ia64, alpha, mips, etc.
    MIPS64EL_OPENBSD done
  NetBSD: ia64, alpha, mips, etc.
  FreeBSD: ia64, alpha, mips, ppc, etc.
  DragonflyBSD
  Plan9: via C generating backend?
  BeOS: via C generating backend?
  OS/2: via C generating backend?
  MS-DOS/djgpp
  android
  iphone (was basically working long ago)
  AIX: ppc32, ppc64

See also: write a C generating backend
-----------------------------------------------------------------------------
Write a linker in Modula-3.
  For various object formats!
Write/finish the loader in Modula-3.

Adapt m3back to more x86 targets and more targets.
  Esp. other object formats! (m3objfile, not m3back)
-----------------------------------------------------------------------------
Generate position independent code in m3back.
  Perhaps even for NT.
-----------------------------------------------------------------------------
remove more/all remaining uses of volatile in gcc backend
  volatiles all removed now
allow all optimizations in gcc backend
  esp. flag_unit_at_a_time (flag_unit_at_a_time done)
remaining ones are:
  flag_tree_pre
  gcc 4.5: flag_tree_fre
  gcc 4.5: flag_predictive_commoning
  gcc 4.5: flag_inline_functions
  gcc 4.5: flag_inline_small_functions
  gcc 4.5: flag_ipa_cp_clone
-----------------------------------------------------------------------------
relink in ship
  to address $ORIGIN missing on OSF/1 and NetBSD 4.0 and allow
  dynamically linked unshipped binaries to run
-----------------------------------------------------------------------------
dynamically link cm3, but use $ORIGIN
-----------------------------------------------------------------------------
Consider using Win32 condition variables introduced in Vista.
But probably not. We have a pretty good implementation now, the
giant lock is gone.
-----------------------------------------------------------------------------
Consider restoring the Win32 thread pool.
But probably not.
-----------------------------------------------------------------------------
Move all platforms to "PageSize=64K",
to eliminate more platform differences.
-----------------------------------------------------------------------------
Implement stack walking via libgcc/libunwind.
Implement stack walking on OSF/1 as it was.
-----------------------------------------------------------------------------
Move code from quake/config to Modula-3/cm3.
Including TARGET_OS, TARGET_ARCHITECTURE!
-----------------------------------------------------------------------------
Eliminate more of m3core/src/unix/*.i3, the platform-specific parts,
if any are left. In particular uin-common, uin-len.
Maybe Solaris can be reduced via C.
-----------------------------------------------------------------------------
Reduce/eliminate other header cloning or dependency on it?
X.i3? WinBase.i3?
-----------------------------------------------------------------------------
make extended/long double larger than longreal/double
-----------------------------------------------------------------------------
