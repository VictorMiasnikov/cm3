(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

INTERFACE MySQL;



TYPE
  T <: ADDRESS;
  ResultT <: ADDRESS;
  StmtT <: ADDRESS;
  RowOffsetT <: ADDRESS;
  ManagerT <: ADDRESS;
  ParametersT <: ADDRESS;
  BindT <: ADDRESS;
  CharsT <: ADDRESS;
  FieldT = REF MYSQL_FIELD;
  RefFieldArray = REF ARRAY OF FieldT;

CONST
  MAX_COLUMNS = 1000;            (* Arbitrary limit to how many cols
                                    returned in a query *)

EXCEPTION ConnE;
EXCEPTION ResultE;
EXCEPTION ReturnE(INTEGER);

TYPE RefLengthsT = UNTRACED REF ARRAY [0 .. MAX_COLUMNS] OF INTEGER;

TYPE
  InitCBT = PROCEDURE (p1: REF ADDRESS; p2: TEXT; p3: ADDRESS): INTEGER;
  ReadCBT = PROCEDURE (p1: ADDRESS; p2: TEXT; p3: CARDINAL): INTEGER;
  ErrorCBT = PROCEDURE (p1: ADDRESS; p2: TEXT; p3: CARDINAL): INTEGER;
  EndCBT = PROCEDURE (p1: ADDRESS);

CONST
  CLIENT_NET_READ_TIMEOUT  = 365 * 24 * 3600;
  CLIENT_NET_WRITE_TIMEOUT = 365 * 24 * 3600;

TYPE

  MYSQL_FIELD = RECORD
                  name            : TEXT;
                  org_name        : TEXT;
                  table           : TEXT;
                  org_table       : TEXT;
                  db              : TEXT;
                  catalog         : TEXT;
                  def             : TEXT;
                  length          : CARDINAL;
                  max_length      : CARDINAL;
                  name_length     : CARDINAL;
                  org_name_length : CARDINAL;
                  table_length    : CARDINAL;
                  org_table_length: CARDINAL;
                  db_length       : CARDINAL;
                  catalog_length  : CARDINAL;
                  def_length      : CARDINAL;
                  flags           : CARDINAL;
                  decimals        : CARDINAL;
                  charsetnr       : CARDINAL;
                  type            : INTEGER;
                  extension       : ADDRESS
                END;

TYPE                             (* Enum Option *)
  Option = {MYSQL_OPT_CONNECT_TIMEOUT, MYSQL_OPT_COMPRESS,
            MYSQL_OPT_NAMED_PIPE, MYSQL_INIT_COMMAND,
            MYSQL_READ_DEFAULT_FILE, MYSQL_READ_DEFAULT_GROUP,
            MYSQL_SET_CHARSET_DIR, MYSQL_SET_CHARSET_NAME,
            MYSQL_OPT_LOCAL_INFILE, MYSQL_OPT_PROTOCOL,
            MYSQL_SHARED_MEMORY_BASE_NAME, MYSQL_OPT_READ_TIMEOUT,
            MYSQL_OPT_WRITE_TIMEOUT, MYSQL_OPT_USE_RESULT,
            MYSQL_OPT_USE_REMOTE_CONNECTION,
            MYSQL_OPT_USE_EMBEDDED_CONNECTION, MYSQL_OPT_GUESS_CONNECTION,
            MYSQL_SET_CLIENT_IP, MYSQL_SECURE_AUTH,
            MYSQL_REPORT_DATA_TRUNCATION, MYSQL_OPT_RECONNECT,
            MYSQL_OPT_SSL_VERIFY_SERVER_CERT, MYSQL_PLUGIN_DIR,
            MYSQL_DEFAULT_AUTH, MYSQL_OPT_BIND, MYSQL_OPT_SSL_KEY,
            MYSQL_OPT_SSL_CERT, MYSQL_OPT_SSL_CA, MYSQL_OPT_SSL_CAPATH,
            MYSQL_OPT_SSL_CIPHER, MYSQL_OPT_SSL_CRL, MYSQL_OPT_SSL_CRLPATH,
            MYSQL_OPT_CONNECT_ATTR_RESET, MYSQL_OPT_CONNECT_ATTR_ADD,
            MYSQL_OPT_CONNECT_ATTR_DELETE, MYSQL_SERVER_PUBLIC_KEY,
            MYSQL_ENABLE_CLEARTEXT_PLUGIN,
            MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS, MYSQL_OPT_SSL_ENFORCE,
            MYSQL_OPT_MAX_ALLOWED_PACKET, MYSQL_OPT_NET_BUFFER_LENGTH,
            MYSQL_OPT_TLS_VERSION, MYSQL_OPT_SSL_MODE};


TYPE                             (* Enum Status *)
  Status = {MYSQL_STATUS_READY, MYSQL_STATUS_GET_RESULT,
            MYSQL_STATUS_USE_RESULT, MYSQL_STATUS_STATEMENT_GET_RESULT};


TYPE                             (* Enum ProtocolType *)
  ProtocolType =
    {MYSQL_PROTOCOL_DEFAULT, MYSQL_PROTOCOL_TCP, MYSQL_PROTOCOL_SOCKET,
     MYSQL_PROTOCOL_PIPE, MYSQL_PROTOCOL_MEMORY};


CONST                            (* Enum SQLMode *)
  SSL_MODE_DISABLED        = 1;
  SSL_MODE_PREFERRED       = 2;
  SSL_MODE_REQUIRED        = 3;
  SSL_MODE_VERIFY_CA       = 4;
  SSL_MODE_VERIFY_IDENTITY = 5;

TYPE                             (* Enum SQLMode *)
  SQLMode = [1 .. 5];

PROCEDURE ServerInit
  (argc: INTEGER; READONLY argv, groups: ARRAY OF TEXT; ): INTEGER
  RAISES {ReturnE};

PROCEDURE ServerEnd ();

PROCEDURE ThreadInit (): BOOLEAN;

PROCEDURE ThreadEnd ();

PROCEDURE NumRows (res: ResultT; ): LONGINT;

PROCEDURE NumFields (res: ResultT; ): CARDINAL;

PROCEDURE Eof (res: ResultT; ): BOOLEAN;

PROCEDURE FetchFieldDirect (res: ResultT; fieldnr: CARDINAL; ): FieldT;

PROCEDURE FetchFields (res: ResultT; ): RefFieldArray;

PROCEDURE RowTell (res: ResultT; ): RowOffsetT;

PROCEDURE FieldTell (res: ResultT; ): CARDINAL;

PROCEDURE FieldCount (mysql: T; ): CARDINAL;

PROCEDURE AffectedRows (mysql: T; ): LONGINT;

PROCEDURE InsertId (mysql: T; ): LONGINT;

PROCEDURE Errno (mysql: T; ): CARDINAL;

PROCEDURE Error (mysql: T; ): TEXT;

PROCEDURE Sqlstate (mysql: T; ): TEXT;

PROCEDURE WarningCount (mysql: T; ): CARDINAL;

PROCEDURE Info (mysql: T; ): TEXT;

PROCEDURE ThreadId (mysql: T; ): CARDINAL;

PROCEDURE CharacterSetName (mysql: T; ): TEXT;

PROCEDURE SetCharacterSet (mysql: T; csname: TEXT; ): INTEGER
  RAISES {ReturnE};

PROCEDURE Init (mysql: T; ): T RAISES {ConnE};

PROCEDURE SslSet (mysql: T; key, cert, ca, capath, cipher: TEXT; ):
  BOOLEAN;

PROCEDURE GetSslCipher (mysql: T; ): TEXT;

PROCEDURE ChangeUser (mysql: T; user, passwd, db: TEXT; ): BOOLEAN;

PROCEDURE RealConnect (mysql                 : T;
                       host, user, passwd, db: TEXT;
                       port                  : CARDINAL;
                       unix_socket           : TEXT;
                       clientflag            : CARDINAL; ): T
  RAISES {ConnE};

PROCEDURE SelectDb (mysql: T; db: TEXT; ): INTEGER RAISES {ReturnE};

PROCEDURE Query (mysql: T; q: TEXT; ): INTEGER RAISES {ReturnE};

PROCEDURE SendQuery (mysql: T; q: TEXT; length: CARDINAL; ): INTEGER
  RAISES {ReturnE};

PROCEDURE RealQuery (mysql: T; q: TEXT; length: CARDINAL; ): INTEGER
  RAISES {ReturnE};

PROCEDURE StoreResult (mysql: T; ): ResultT RAISES {ResultE};

PROCEDURE UseResult (mysql: T; ): ResultT RAISES {ResultE};

PROCEDURE GetCharacterSetInfo (mysql: T; VAR charset: CharsT; );

PROCEDURE SessionTrackGetFirst (         mysql : T;
                                         type  : INTEGER;
                                READONLY data  : ARRAY OF TEXT;
                                VAR      length: INTEGER;       ): INTEGER
  RAISES {ReturnE};

PROCEDURE SessionTrackGetNext (         mysql : T;
                                        type  : INTEGER;
                               READONLY data  : ARRAY OF TEXT;
                               VAR      length: INTEGER;       ): INTEGER
  RAISES {ReturnE};


CONST LOCAL_INFILE_ERROR_LEN = 512;
PROCEDURE SetLocalInfileHandler (mysql             : T;
                                 local_infile_init : InitCBT;
                                 local_infile_read : ReadCBT;
                                 local_infile_end  : EndCBT;
                                 local_infile_error: ErrorCBT;
                                 arg6              : ADDRESS;  );

PROCEDURE SetLocalInfileDefault (mysql: T; );

PROCEDURE Shutdown (mysql: T; shutdown_level: INTEGER; ): INTEGER
  RAISES {ReturnE};

PROCEDURE DumpDebugInfo (mysql: T; ): INTEGER RAISES {ReturnE};

PROCEDURE Refresh (mysql: T; refresh_options: CARDINAL; ): INTEGER
  RAISES {ReturnE};

PROCEDURE Kill (mysql: T; pid: CARDINAL; ): INTEGER RAISES {ReturnE};

PROCEDURE SetServerOption (mysql: T; option: INTEGER; ): INTEGER
  RAISES {ReturnE};

PROCEDURE Ping (mysql: T; ): INTEGER RAISES {ReturnE};

PROCEDURE Stat (mysql: T; ): TEXT;

PROCEDURE GetServerInfo (mysql: T; ): TEXT;

PROCEDURE GetClientInfo (): TEXT;

PROCEDURE GetClientVersion (): CARDINAL;

PROCEDURE GetHostInfo (mysql: T; ): TEXT;

PROCEDURE GetServerVersion (mysql: T; ): CARDINAL;

PROCEDURE GetProtoInfo (mysql: T; ): CARDINAL;

PROCEDURE ListDbs (mysql: T; wild: TEXT; ): ResultT RAISES {ResultE};

PROCEDURE ListTables (mysql: T; wild: TEXT; ): ResultT RAISES {ResultE};

PROCEDURE ListProcesses (mysql: T; ): ResultT RAISES {ResultE};

PROCEDURE Options (mysql: T; option: INTEGER; arg: ADDRESS; ): INTEGER
  RAISES {ReturnE};

PROCEDURE Options4 (mysql: T; option: INTEGER; arg1, arg2: ADDRESS; ):
  INTEGER RAISES {ReturnE};

PROCEDURE GetOption (mysql: T; option: INTEGER; arg: ADDRESS; ): INTEGER
  RAISES {ReturnE};

PROCEDURE FreeResult (mysql_res: ResultT; );

PROCEDURE DataSeek (mysql_res: ResultT; offset: LONGINT; );

PROCEDURE RowSeek (mysql_res: ResultT; VAR offset: RowOffsetT; ):
  RowOffsetT;

PROCEDURE FieldSeek (mysql_res: ResultT; offset: CARDINAL; ): CARDINAL;

PROCEDURE FetchRow (mysql_res: ResultT; ): REF ARRAY OF TEXT;

PROCEDURE FetchLengths (mysql_res: ResultT; ): RefLengthsT;

PROCEDURE FetchField (mysql_res: ResultT; ): FieldT;

PROCEDURE ListFields (mysql: T; table, wild: TEXT; ): ResultT
  RAISES {ResultE};

PROCEDURE EscapeString (to, from: TEXT; from_length: CARDINAL; ): CARDINAL;

PROCEDURE HexString (to, from: TEXT; from_length: CARDINAL; ): CARDINAL;

PROCEDURE RealEscapeString (mysql: T; to, from: TEXT; length: CARDINAL; ):
  CARDINAL;

PROCEDURE RealEscapeStringQuote
  (mysql: T; to, from: TEXT; length: CARDINAL; quote: CHAR; ): CARDINAL;

PROCEDURE Debug (debug: TEXT; );

PROCEDURE ThreadSafe (): CARDINAL;

PROCEDURE ReadQueryResult (mysql: T; ): BOOLEAN;

PROCEDURE ResetConnection (mysql: T; ): INTEGER RAISES {ReturnE};


CONST                            (* Enum StmtState *)
  MYSQL_STMT_INIT_DONE    = 1;
  MYSQL_STMT_PREPARE_DONE = 2;
  MYSQL_STMT_EXECUTE_DONE = 3;
  MYSQL_STMT_FETCH_DONE   = 4;

TYPE                             (* Enum StmtState *)
  StmtState = [1 .. 4];


TYPE                             (* Enum StmtAttrType *)
  StmtAttrType = {STMT_ATTR_UPDATE_MAX_LENGTH, STMT_ATTR_CURSOR_TYPE,
                  STMT_ATTR_PREFETCH_ROWS};

PROCEDURE StmtInit (mysql: T; ): StmtT RAISES {ResultE};

PROCEDURE StmtPrepare (stmt: StmtT; query: TEXT; length: CARDINAL; ):
  INTEGER RAISES {ReturnE};

PROCEDURE StmtExecute (stmt: StmtT; ): INTEGER RAISES {ReturnE};

PROCEDURE StmtFetch (stmt: StmtT; ): INTEGER RAISES {ReturnE};

PROCEDURE StmtFetchColumn
  (stmt: StmtT; bind_arg: BindT; column, offset: CARDINAL; ): INTEGER
  RAISES {ReturnE};

PROCEDURE StmtStoreResult (stmt: StmtT; ): INTEGER RAISES {ReturnE};

PROCEDURE StmtParamCount (stmt: StmtT; ): CARDINAL;

PROCEDURE StmtAttrSet (stmt: StmtT; attr_type: INTEGER; attr: ADDRESS; ):
  BOOLEAN;

PROCEDURE StmtAttrGet (stmt: StmtT; attr_type: INTEGER; attr: ADDRESS; ):
  BOOLEAN;

PROCEDURE StmtBindParam (stmt: StmtT; bnd: BindT; ): BOOLEAN;

PROCEDURE StmtBindResult (stmt: StmtT; bnd: BindT; ): BOOLEAN;

PROCEDURE StmtClose (stmt: StmtT; ): BOOLEAN;

PROCEDURE StmtReset (stmt: StmtT; ): BOOLEAN;

PROCEDURE StmtFreeResult (stmt: StmtT; ): BOOLEAN;

PROCEDURE StmtSendLongData
  (stmt: StmtT; param_number: CARDINAL; data: TEXT; length: CARDINAL; ):
  BOOLEAN;

PROCEDURE StmtResultMetadata (stmt: StmtT; ): ResultT RAISES {ResultE};

PROCEDURE StmtParamMetadata (stmt: StmtT; ): ResultT RAISES {ResultE};

PROCEDURE StmtErrno (stmt: StmtT; ): CARDINAL;

PROCEDURE StmtError (stmt: StmtT; ): TEXT;

PROCEDURE StmtSqlstate (stmt: StmtT; ): TEXT;

PROCEDURE StmtRowSeek (stmt: StmtT; VAR offset: RowOffsetT; ): RowOffsetT;

PROCEDURE StmtRowTell (stmt: StmtT; ): RowOffsetT;

PROCEDURE StmtDataSeek (stmt: StmtT; offset: LONGINT; );

PROCEDURE StmtNumRows (stmt: StmtT; ): LONGINT;

PROCEDURE StmtAffectedRows (stmt: StmtT; ): LONGINT;

PROCEDURE StmtInsertId (stmt: StmtT; ): LONGINT;

PROCEDURE StmtFieldCount (stmt: StmtT; ): CARDINAL;

PROCEDURE Commit (mysql: T; ): BOOLEAN;

PROCEDURE Rollback (mysql: T; ): BOOLEAN;

PROCEDURE Autocommit (mysql: T; auto_mode: BOOLEAN; ): BOOLEAN;

PROCEDURE MoreResults (mysql: T; ): BOOLEAN;

PROCEDURE NextResult (mysql: T; ): INTEGER RAISES {ReturnE};

PROCEDURE StmtNextResult (stmt: StmtT; ): INTEGER RAISES {ReturnE};

PROCEDURE Close (sock: T; );


CONST
  MYSQL_NO_DATA        = 100;
  MYSQL_DATA_TRUNCATED = 101;

END MySQL.
